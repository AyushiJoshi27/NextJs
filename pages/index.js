import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";

import Test from "@/models/testModel";
import connectMongo from "@/utils/connectMongo";

export default function Home({ data }) {
  const createTest = async () => {
    const randomNum = Math.floor(Math.random() * 1000);

    const res = await fetch("api/test/add", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        name: `Test ${randomNum}`,
        email: `test${randomNum}@test.com`,
      }),
    });

    const data = await res.json();
    console.log(data);
  };

  return (
    <>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <main className={styles.main}>
          <button onClick={createTest}>Create Test</button>
          <h1 className={styles.title}>
            Welcome to <a href="https://nextjs.org">Next.js!</a>
          </h1>

          <p className={styles.description}>
            Get started by editing{" "}
            <code className={styles.code}>pages/index.js</code>
          </p>

          <div className={styles.grid}>
            {data.map(test => (
              <a
                href="https://nextjs.org/docs"
                key={test._id}
                className={styles.card}
              >
                <h2>{test.name} &rarr;</h2>
                <p>{test.email}</p>
              </a>
            ))}
          </div>
        </main>
      </div>
    </>
  );
}

export const getServerSideProps = async () => {
  try {
    // const { name, email } = req.body;
    console.log("Connecting to mongo");
    await connectMongo();
    console.log("Connected to mongo");
    console.log("Fetching documents");

    const tests = await Test.find();

    console.log("Fetched Document");
    console.log("TESTS DATA SERVER-SIDE", JSON.stringify(tests));

    return {
      props: {
        data: JSON.parse(JSON.stringify(tests)),
      },
    };
  } catch (error) {
    console.log(error);
    return {
      props: {
        notFound: true,
      },
    };
  }
};
